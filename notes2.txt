# ------------------------------------------------------
# Installing Django Rest Framework
- pipenv install djangorestframework
- add 'rest_framework' in the INSTALLED_APPS

# ------------------------------------------------------
# Creating API views
- create a urls.py file
- In views create a function
- register the route in urls.py

- from rest_framework.decorators import api_view
- from rest_framework.response import Response
- @api_view()
    def product_list(request):
        return Response('ok')

- Flow: create views then add it in urls.py (route)

# ------------------------------------------------------
# Creating Serializers
- Converts a model instance to a dictionary
- search django rest framework serializers for more information

- create serializers.py file in the app
- from rest_framework import serializers
- it is like defining a model with fields (make sure it is the same fields with the model)

# ------------------------------------------------------
# Serializing Objects

# The default object result presentation is in String. Add COERCE_DECIMAL_TO_STRING to convert decimal value fields from string to decimal
- In settings
- REST_FRAMEWORK = {
    'COERCE_DECIMAL_TO_STRING': False
}

# Get object return 404 if not found
- from django.shortcuts import get_object_or_404 # used to get the object and return 404 if not found
- set many to True to iterate over the queryset (many=True)
- serializer = PackageSerializer(queryset, many=True)

# ------------------------------------------------------
